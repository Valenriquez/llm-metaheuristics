When creating a metaheuristic it is important to not use markdown code blocks such as  ```python or ```, it is important to not invent any parameter or operator, only use the ones that will be provided below after these operators and selectors explanations.,
These are the following explanations:
- "random_search" operator: Is an algorithm that is useful for ill-structured global optimization problems, where the objective function may be nonconvex, nondifferentiable, and possibly discontinuous over a continuous, discrete, or mixed continuous-discrete domain.
- "central_force_dynamic" operator: Is an algorithm that performs multidimensional search and has roots with gravitation kinematics, it is a deterministic algorithm that provides significant advantage. 
- "differential_mutation" operator: Is an algorithm that optimizes a problem by iteratively trying to improve a candidate solution with regard to a given measure of quality. Can search very large spaces of candidate solutions, however does not guarantee an optimal solution is ever found. 
- "firefly_dynamic" operator: Is an algorithm that uses real random numbers. It is based on the global communication among the swarming particles. It appears to be more effective in multiobjective optimization. There are different types of areas where firefly algorithms are applied. It is used in different types of areas are optimization problem, benchmark problem, Networking problems, and Image Processing problems.
- "genetic_crossover" operator: Is an algorithm used to combine the genetic information of two parents to generate new offspring. It is one way to stochastically generate new solutions from an existing population, and is analogous to the crossover that happens during sexual reproduction in biology. When deciding to use this operator (genetic_crossover) the "genetic_mutation" operator must be used to. 
- "genetic_mutation" operator: Is an algorithm that involves generating a random variable for each bit in a sequence. This random variable tells whether or not a particular bit will be flipped. This mutation procedure, based on the biological point mutation, is called single point mutation. Other types of mutation operators are commonly used for representations other than binary, such as floating-point encodings or representations for combinatorial problems. Its' purpose is to introduce diversity into the sampled population. Mutation operators are used in an attempt to avoid local minima by preventing the population of chromosomes from becoming too similar to each other, thus slowing or even stopping convergence to the global optimum. When deciding to use this operator (genetic_mutation) the "genetic_crossover" operator must be used to. 
- "gravitational_search" operator: Is an algorithm that could be considered as an isolated system of masses. It is like a small artificial world of masses obeying the Newtonian laws of gravitation and motion. Tends to find the global optimum faster than other algorithms and hence has a higher convergence rate.
- "random_flight" operator:  Is an algorithm that uses random jumps across the search space, typically controlled by a scale factor and a distribution (e.g., Levy, uniform, or Gaussian). This allows the algorithm to explore new regions more aggressively, making it suitable for escaping local minima and searching widely for global optima.
- "local_random_walk" operator: Is an algorithm that performs small, random steps in the vicinity of the current solution. It uses a probability factor and a distribution (e.g., uniform, Gaussian, or Levy) to determine the size and direction of each step. This operator is beneficial for local exploration and refinement around promising regions. 
- "random_sample" operator: Is an algorithm that samples solutions randomly from the entire search space. Itâ€™s often used for unbiased exploration and can act as a baseline search method. Since it lacks directional guidance, it covers a broad range but relies on volume to achieve diversity in solutions.
- "spiral_dynamic" operator:  Is an algorithm that uses a spiraling pattern to move towards the search target, controlled by parameters like radius, angle, and sigma. This dynamic is inspired by natural spirals and can help converge toward optima by progressively tightening the search pattern around a promising region.
- "swarm_dynamic" operator: Is an algorithm that models collective behavior, where individual agents (solutions) share information and are influenced by both their own best positions and the best position of the entire swarm. Parameters such as self_conf (self-confidence), swarm_conf (swarm confidence), and distribution (e.g., uniform, Gaussian, or Levy) govern how agents move and interact, making this operator effective for balancing exploration and exploitation in complex landscapes.

